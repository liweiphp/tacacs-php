# This file is a template, and might need editing before it works on your project.
# Select image from https://hub.docker.com/_/php/
image: php:7.1

# Select what we should cache between builds
cache:
  paths:
  - vendor/

before_script:
- apt-get update -yqq
- apt-get install -yqq curl

stages:
- tests
- publish

php-7.1:
  type: test
  stage: tests
  image: php:7.1
  script:
  - apt-get install -yqq git libmcrypt-dev libcurl4-gnutls-dev libicu-dev libxpm-dev zlib1g-dev libxml2-dev libexpat1-dev libbz2-dev libgmp3-dev libaspell-dev libpcre3-dev
  - docker-php-ext-install mbstring curl json intl xml #zip bz2
  - pecl install xdebug
  - docker-php-ext-enable xdebug
  - curl -sS https://getcomposer.org/installer | php
  - php composer.phar install
  - vendor/bin/phpunit --configuration tests/phpunit.xml --coverage-text --colors=never

php-7.2:
  type: test
  stage: tests
  image: php:7.2
  script:
  - apt-get install -yqq git libmcrypt-dev libcurl4-gnutls-dev libicu-dev libxpm-dev zlib1g-dev libxml2-dev libexpat1-dev libbz2-dev libgmp3-dev libaspell-dev libpcre3-dev
  - docker-php-ext-install curl json intl xml #zip bz2
  - pecl install xdebug
  - docker-php-ext-enable xdebug
  - curl -sS https://getcomposer.org/installer | php
  - php composer.phar install
  - vendor/bin/phpunit --configuration tests/phpunit.xml --coverage-text --colors=never

packagist:
  type: build
  stage: publish
  script:
  - curl -X POST -H 'content-type:application/json' -d '{"repository":{"url":"'${PACKAGIST_PACKAGE_URL}'"}}' 'https://packagist.org/api/update-package?username='${PACKAGIST_USERNAME}'&apiToken='${PACKAGIST_API_TOKEN}''
